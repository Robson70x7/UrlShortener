user nginx; worker_processes auto;

error_log /var/log/nginx/error.log warn; pid /var/run/nginx.pid;

events { worker_connections 1024; }

http {

 include /etc/nginx/mime.types; 

default_type application/octet-stream;

```
log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

access_log  /var/log/nginx/access.log  main;

sendfile        on;
keepalive_timeout  65;

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=shorten:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=analytics:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;

# Upstream definitions for load balancing
upstream url_service {
    server url-service-1:8080;
    server url-service-2:8080;
}

upstream user_service {
    server user-service-1:8080;
    server user-service-2:8080;
}

upstream analytics_service {
    server analytics-service-1:8080;
    server analytics-service-2:8080;
}

server {
    listen 80;
    server_name localhost;

    # Healthcheck endpoint
    location /health {
        return 200 "Nginx is healthy";
    }

    # URL Service routes
    location /shorten {
        limit_req zone=shorten burst=20 nodelay;
        proxy_pass http://url_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~ ^/([a-zA-Z0-9]{6})$ {
        proxy_pass http://url_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # User Service routes
    location /register {
        limit_req zone=auth burst=10 nodelay;
        proxy_pass http://user_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /login {
        limit_req zone=auth burst=10 nodelay;
        proxy_pass http://user_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /users {
        proxy_pass http://user_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Analytics Service routes
    location /analytics {
        limit_req zone=analytics burst=50 nodelay;
        proxy_pass http://analytics_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error handling for rate limiting
    limit_req_status 429;
}
```

}